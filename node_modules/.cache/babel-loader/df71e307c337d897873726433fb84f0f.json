{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"./axios\";\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    username: null,\n    email: null,\n    token: null,\n    userId: null,\n    firstName: null,\n    lastName: null,\n    isAuth: false,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    authStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    authSuccess: (state, action) => {\n      state.username = action.payload.username;\n      state.token = action.payload.token;\n      state.last_name = action.payload.last_name;\n      state.first_name = action.payload.first_name;\n      state.userId = action.payload.userId;\n      state.isAuth = action.payload.token !== null;\n      state.error = null;\n      state.loading = false;\n    },\n    authFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    authLogout: state => {\n      localStorage.removeItem(\"user\");\n    }\n  }\n});\nexport const {\n  authStart,\n  authSuccess,\n  authLogout,\n  authFail\n} = authSlice.actions;\nexport const authRegister = (username, password, email) => {\n  return dispatch => {\n    dispatch(authStart());\n    axiosInstance.post(\"users/register/\", {\n      username: username,\n      password: password,\n      email: email\n    }).then(res => {\n      dispatch(authSuccess(res.data));\n      console.log(res);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n};\nexport default authSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Desktop/JyraIMS/gui/src/features/authSlice.js"],"names":["createSlice","axiosInstance","authSlice","name","initialState","username","email","token","userId","firstName","lastName","isAuth","loading","error","reducers","authStart","state","authSuccess","action","payload","last_name","first_name","authFail","authLogout","localStorage","removeItem","actions","authRegister","password","dispatch","post","then","res","data","console","log","catch","err","message","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,SAA1B;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,IADE;AAEZC,IAAAA,KAAK,EAAE,IAFK;AAGZC,IAAAA,KAAK,EAAE,IAHK;AAIZC,IAAAA,MAAM,EAAE,IAJI;AAKZC,IAAAA,SAAS,EAAE,IALC;AAMZC,IAAAA,QAAQ,EAAE,IANE;AAOZC,IAAAA,MAAM,EAAE,KAPI;AAQZC,IAAAA,OAAO,EAAE,KARG;AASZC,IAAAA,KAAK,EAAE;AATK,GAFqB;AAanCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAJO;AAKRI,IAAAA,WAAW,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC9BF,MAAAA,KAAK,CAACX,QAAN,GAAiBa,MAAM,CAACC,OAAP,CAAed,QAAhC;AACAW,MAAAA,KAAK,CAACT,KAAN,GAAcW,MAAM,CAACC,OAAP,CAAeZ,KAA7B;AACAS,MAAAA,KAAK,CAACI,SAAN,GAAkBF,MAAM,CAACC,OAAP,CAAeC,SAAjC;AACAJ,MAAAA,KAAK,CAACK,UAAN,GAAmBH,MAAM,CAACC,OAAP,CAAeE,UAAlC;AACAL,MAAAA,KAAK,CAACR,MAAN,GAAeU,MAAM,CAACC,OAAP,CAAeX,MAA9B;AACAQ,MAAAA,KAAK,CAACL,MAAN,GAAeO,MAAM,CAACC,OAAP,CAAeZ,KAAf,KAAyB,IAAxC;AACAS,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACAG,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD,KAdO;AAeRU,IAAAA,QAAQ,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AAC3BF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD,KAlBO;AAmBRW,IAAAA,UAAU,EAAGP,KAAD,IAAW;AACrBQ,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;AArBO;AAbyB,CAAD,CAA7B;AAsCP,OAAO,MAAM;AAAEV,EAAAA,SAAF;AAAaE,EAAAA,WAAb;AAA0BM,EAAAA,UAA1B;AAAsCD,EAAAA;AAAtC,IACXpB,SAAS,CAACwB,OADL;AAGP,OAAO,MAAMC,YAAY,GAAG,CAACtB,QAAD,EAAWuB,QAAX,EAAqBtB,KAArB,KAA+B;AACzD,SAAQuB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACAd,IAAAA,aAAa,CACV6B,IADH,CACQ,iBADR,EAC2B;AACvBzB,MAAAA,QAAQ,EAAEA,QADa;AAEvBuB,MAAAA,QAAQ,EAAEA,QAFa;AAGvBtB,MAAAA,KAAK,EAAEA;AAHgB,KAD3B,EAMGyB,IANH,CAMSC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACZ,WAAW,CAACe,GAAG,CAACC,IAAL,CAAZ,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,KATH,EAUGI,KAVH,CAUUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACD,KAZH;AAaD,GAfD;AAgBD,CAjBM;AAmBP,eAAepC,SAAS,CAACqC,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"./axios\";\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    username: null,\r\n    email: null,\r\n    token: null,\r\n    userId: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    isAuth: false,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    authStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    authSuccess: (state, action) => {\r\n      state.username = action.payload.username;\r\n      state.token = action.payload.token;\r\n      state.last_name = action.payload.last_name;\r\n      state.first_name = action.payload.first_name;\r\n      state.userId = action.payload.userId;\r\n      state.isAuth = action.payload.token !== null;\r\n      state.error = null;\r\n      state.loading = false;\r\n    },\r\n    authFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    authLogout: (state) => {\r\n      localStorage.removeItem(\"user\");\r\n    },\r\n  },\r\n});\r\n\r\nexport const { authStart, authSuccess, authLogout, authFail } =\r\n  authSlice.actions;\r\n\r\nexport const authRegister = (username, password, email) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axiosInstance\r\n      .post(\"users/register/\", {\r\n        username: username,\r\n        password: password,\r\n        email: email,\r\n      })\r\n      .then((res) => {\r\n        dispatch(authSuccess(res.data));\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport default authSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}